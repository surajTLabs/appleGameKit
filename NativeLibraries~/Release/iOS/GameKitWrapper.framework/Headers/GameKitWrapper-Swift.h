#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.2 effective-5.10 (swiftlang-6.2.0.19.9 clang-1700.3.19.1)
#ifndef GAMEKITWRAPPER_SWIFT_H
#define GAMEKITWRAPPER_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef unsigned char char8_t;
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import GameKit;
@import ObjectiveC;
#endif

#import <GameKitWrapper/GameKitWrapper.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="GameKitWrapper",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

SWIFT_CLASS("_TtC14GameKitWrapper22GKWLocalPlayerListener")
@interface GKWLocalPlayerListener : NSObject <GKLocalPlayerListener>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class GKMatch;
@class NSData;
@class GKPlayer;
SWIFT_CLASS("_TtC14GameKitWrapper16GKWMatchDelegate")
@interface GKWMatchDelegate : NSObject <GKMatchDelegate>
- (void)match:(GKMatch * _Nonnull)match didReceiveData:(NSData * _Nonnull)data fromRemotePlayer:(GKPlayer * _Nonnull)player;
- (void)match:(GKMatch * _Nonnull)match didReceiveData:(NSData * _Nonnull)data forRecipient:(GKPlayer * _Nonnull)recipient fromRemotePlayer:(GKPlayer * _Nonnull)player;
- (void)match:(GKMatch * _Nonnull)match player:(GKPlayer * _Nonnull)player didChangeConnectionState:(GKPlayerConnectionState)state;
- (BOOL)match:(GKMatch * _Nonnull)match shouldReinviteDisconnectedPlayer:(GKPlayer * _Nonnull)player SWIFT_WARN_UNUSED_RESULT;
- (void)match:(GKMatch * _Nonnull)match didFailWithError:(NSError * _Nullable)error;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class GKMatchmakerViewController;
@class NSString;
SWIFT_CLASS("_TtC14GameKitWrapper35GKWMatchmakerViewControllerDelegate")
@interface GKWMatchmakerViewControllerDelegate : NSObject <GKMatchmakerViewControllerDelegate>
- (void)matchmakerViewControllerWasCancelled:(GKMatchmakerViewController * _Nonnull)viewController;
- (void)matchmakerViewController:(GKMatchmakerViewController * _Nonnull)viewController didFailWithError:(NSError * _Nonnull)error;
- (void)matchmakerViewController:(GKMatchmakerViewController * _Nonnull)viewController didFindMatch:(GKMatch * _Nonnull)match;
- (void)matchmakerViewController:(GKMatchmakerViewController * _Nonnull)viewController hostedPlayerDidAccept:(GKPlayer * _Nonnull)player;
- (void)matchmakerViewController:(GKMatchmakerViewController * _Nonnull)viewController didFindHostedPlayers:(NSArray<GKPlayer *> * _Nonnull)players;
- (void)matchmakerViewController:(GKMatchmakerViewController * _Nonnull)viewController getMatchPropertiesForRecipient:(GKPlayer * _Nonnull)recipient withCompletionHandler:(void (^ _Nonnull)(NSDictionary<NSString *, id> * _Nonnull))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class GKTurnBasedMatchmakerViewController;
SWIFT_CLASS("_TtC14GameKitWrapper44GKWTurnBasedMatchmakerViewControllerDelegate")
@interface GKWTurnBasedMatchmakerViewControllerDelegate : NSObject <GKTurnBasedMatchmakerViewControllerDelegate>
- (void)turnBasedMatchmakerViewControllerWasCancelled:(GKTurnBasedMatchmakerViewController * _Nonnull)viewController;
- (void)turnBasedMatchmakerViewController:(GKTurnBasedMatchmakerViewController * _Nonnull)viewController didFailWithError:(NSError * _Nonnull)error;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

SWIFT_CLASS("_TtC14GameKitWrapper24GameKitUIDelegateHandler")
@interface GameKitUIDelegateHandler : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSError;
SWIFT_EXTERN void DefaultNSErrorHandler_Set(void (* _Nullable callback)(NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

@class NSException;
SWIFT_EXTERN void DefaultNSExceptionHandler_Set(void (* _Nullable callback)(NSException * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN GKWAccessPointFrameInScreenCoordinates GKAccessPoint_GetFrameInScreenCoordinates(void * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN GKWAccessPointFrameInScreenCoordinates GKAccessPoint_GetFrameInUnitCoordinates(void * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN BOOL GKAccessPoint_GetIsActive(void * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN BOOL GKAccessPoint_GetIsPresentingGameCenter(void * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN BOOL GKAccessPoint_GetIsVisible(void * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSInteger GKAccessPoint_GetLocation(void * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void * _Nonnull GKAccessPoint_GetShared(void) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN BOOL GKAccessPoint_GetShowHighlights(void * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKAccessPoint_SetIsActive(void * _Nonnull pointer, BOOL value) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKAccessPoint_SetLocation(void * _Nonnull pointer, NSInteger value) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKAccessPoint_SetShowHighlights(void * _Nonnull pointer, BOOL value) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKAccessPoint_Trigger(void * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKAccessPoint_TriggerForChallenges(void * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKAccessPoint_TriggerForFriending(void * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKAccessPoint_TriggerForPlayTogether(void * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKAccessPoint_TriggerWithAchievementID(void * _Nonnull pointer, NSString * _Nonnull * _Nonnull achievementIDPtr, int64_t taskId, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKAccessPoint_TriggerWithChallengeDefinitionID(void * _Nonnull pointer, NSString * _Nonnull * _Nonnull challengeDefinitionIDPtr, int64_t taskId, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKAccessPoint_TriggerWithGameActivity(void * _Nonnull pointer, void * _Nonnull gameActivityPointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKAccessPoint_TriggerWithGameActivityDefinitionID(void * _Nonnull pointer, NSString * _Nonnull * _Nonnull gameActivityDefinitionIDPtr, int64_t taskId, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKAccessPoint_TriggerWithLeaderboardID(void * _Nonnull pointer, NSString * _Nonnull * _Nonnull leaderboardIDPtr, NSInteger playerScope, NSInteger timeScope, int64_t taskId, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKAccessPoint_TriggerWithLeaderboardSetID(void * _Nonnull pointer, NSString * _Nonnull * _Nonnull leaderboardSetIDPtr, int64_t taskId, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKAccessPoint_TriggerWithPlayer(void * _Nonnull pointer, GKPlayer * _Nonnull * _Nonnull playerPtr, int64_t taskId, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKAccessPoint_TriggerWithState(void * _Nonnull pointer, int64_t state, int64_t taskId, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

@class GKAchievementChallenge;
@class GKAchievement;
SWIFT_EXTERN GKAchievement * _Nonnull * _Nullable GKAchievementChallenge_GetAchievement(GKAchievementChallenge * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

@class GKAchievementDescription;
SWIFT_EXTERN int8_t * _Nonnull GKAchievementDescription_GetAchievedDescription(GKAchievementDescription * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nonnull GKAchievementDescription_GetActivityIdentifier(GKAchievementDescription * _Nonnull * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSDictionary * _Nonnull * _Nonnull GKAchievementDescription_GetActivityProperties(GKAchievementDescription * _Nonnull * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nullable GKAchievementDescription_GetGroupIdentifier(GKAchievementDescription * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nonnull GKAchievementDescription_GetIdentifier(GKAchievementDescription * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSData * _Nonnull * _Nullable GKAchievementDescription_GetIncompleteAchievementImage(void) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN BOOL GKAchievementDescription_GetIsHidden(GKAchievementDescription * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN BOOL GKAchievementDescription_GetIsReplayable(GKAchievementDescription * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSInteger GKAchievementDescription_GetMaximumPoints(GKAchievementDescription * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSData * _Nonnull * _Nullable GKAchievementDescription_GetPlaceholderCompletedAchievementImage(void) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN double GKAchievementDescription_GetRarityPercent(GKAchievementDescription * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSUInteger GKAchievementDescription_GetReleaseState(GKAchievementDescription * _Nonnull * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nonnull GKAchievementDescription_GetTitle(GKAchievementDescription * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nonnull GKAchievementDescription_GetUnachievedDescription(GKAchievementDescription * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKAchievementDescription_LoadAchievementDescriptions(int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKAchievementDescription_LoadImage(GKAchievementDescription * _Nonnull * _Nonnull pointer, int64_t taskId, void (* _Nonnull onImageLoaded)(int64_t, NSData * _Nonnull * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKAchievement_ChallengeComposeController(GKAchievement * _Nonnull * _Nonnull pointer, int8_t * _Nonnull message, NSArray * _Nonnull * _Nonnull playersPtr) SWIFT_NOEXCEPT;

SWIFT_EXTERN int8_t * _Nonnull GKAchievement_GetIdentifier(GKAchievement * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN BOOL GKAchievement_GetIsCompleted(GKAchievement * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSTimeInterval GKAchievement_GetLastReportedDate(GKAchievement * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN double GKAchievement_GetPercentComplete(GKAchievement * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN GKPlayer * _Nonnull * _Nonnull GKAchievement_GetPlayer(GKAchievement * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN BOOL GKAchievement_GetShowCompletionBanner(GKAchievement * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN GKAchievement * _Nonnull * _Nonnull GKAchievement_Init(int8_t * _Nonnull identifier) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN GKAchievement * _Nonnull * _Nonnull GKAchievement_InitForPlayer(int8_t * _Nonnull identifier, GKPlayer * _Nonnull * _Nonnull gkPlayerPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKAchievement_LoadAchievements(int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKAchievement_Report(int64_t taskId, NSArray * _Nonnull * _Nonnull pointer, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKAchievement_ResetAchievements(int64_t taskId, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKAchievement_SelectChallengeablePlayers(GKAchievement * _Nonnull * _Nonnull pointer, int64_t taskId, NSArray * _Nonnull * _Nonnull playersPtr, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKAchievement_SetIdentifier(GKAchievement * _Nonnull * _Nonnull pointer, int8_t * _Nonnull value) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKAchievement_SetPercentComplete(GKAchievement * _Nonnull * _Nonnull pointer, double value) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKAchievement_SetShowCompletionBanner(GKAchievement * _Nonnull * _Nonnull pointer, BOOL value) SWIFT_NOEXCEPT;

@class GKBasePlayer;
SWIFT_EXTERN int8_t * _Nullable GKBasePlayer_GetDisplayName(GKBasePlayer * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nullable GKChallengeDefinition_GetDetails(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSArray * _Nonnull * _Nonnull GKChallengeDefinition_GetDurationOptions(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nullable GKChallengeDefinition_GetGroupIdentifier(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nonnull GKChallengeDefinition_GetIdentifier(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN BOOL GKChallengeDefinition_GetIsRepeatable(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

@class GKLeaderboard;
SWIFT_EXTERN GKLeaderboard * _Nonnull * _Nullable GKChallengeDefinition_GetLeaderboard(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSUInteger GKChallengeDefinition_GetReleaseState(GKAchievementDescription * _Nonnull * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nonnull GKChallengeDefinition_GetTitle(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKChallengeDefinition_HasActiveChallenges(void * _Nonnull thisPtr, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, BOOL), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKChallengeDefinition_LoadChallengeDefinitions(int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKChallengeDefinition_LoadImage(void * _Nonnull thisPtr, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, NSData * _Nonnull * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

@class GKChallenge;
SWIFT_EXTERN void GKChallenge_Decline(GKChallenge * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT;

SWIFT_EXTERN NSInteger GKChallenge_GetChallengeType(GKChallenge * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSTimeInterval GKChallenge_GetCompletionDate(GKChallenge * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSTimeInterval GKChallenge_GetIssueDate(GKChallenge * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN GKPlayer * _Nonnull * _Nullable GKChallenge_GetIssuingPlayer(GKChallenge * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nullable GKChallenge_GetMessage(GKChallenge * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN GKPlayer * _Nonnull * _Nullable GKChallenge_GetReceivingPlayer(GKChallenge * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSInteger GKChallenge_GetState(GKChallenge * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKChallenge_LoadReceivedChallenges(int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKChallenge_SetChallengeCompletedCallback(void (* _Nonnull callback)(GKPlayer * _Nonnull * _Nonnull, GKChallenge * _Nonnull * _Nonnull, GKPlayer * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKChallenge_SetChallengeOtherPlayerAcceptedCallback(void (* _Nonnull callback)(GKPlayer * _Nonnull * _Nonnull, GKChallenge * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKChallenge_SetChallengeOtherPlayerCompletedCallback(void (* _Nonnull callback)(GKPlayer * _Nonnull * _Nonnull, GKChallenge * _Nonnull * _Nonnull, GKPlayer * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKChallenge_SetChallengeReceivedCallback(void (* _Nonnull callback)(GKPlayer * _Nonnull * _Nonnull, GKChallenge * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN int8_t * _Nullable GKGameActivityDefinition_Details(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSDictionary * _Nonnull * _Nonnull GKGameActivityDefinition_GetDefaultProperties(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nullable GKGameActivityDefinition_GetFallbackURL(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nullable GKGameActivityDefinition_GetGroupIdentifier(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nonnull GKGameActivityDefinition_GetIdentifier(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

@class NSNumber;
SWIFT_EXTERN NSNumber * _Nonnull * _Nullable GKGameActivityDefinition_GetMaxPlayers(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSNumber * _Nonnull * _Nullable GKGameActivityDefinition_GetMinPlayers(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSInteger GKGameActivityDefinition_GetPlayStyle(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSUInteger GKGameActivityDefinition_GetReleaseState(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN BOOL GKGameActivityDefinition_GetSupportsPartyCode(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN BOOL GKGameActivityDefinition_GetSupportsUnlimitedPlayers(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nonnull GKGameActivityDefinition_GetTitle(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKGameActivityDefinition_LoadAchievementDescriptions(void * _Nonnull thisPtr, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKGameActivityDefinition_LoadGameActivityDefinitions(int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKGameActivityDefinition_LoadGameActivityDefinitionsWithIDs(int64_t taskId, NSArray * _Nonnull * _Nonnull activityDefinitionIDsPtr, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKGameActivityDefinition_LoadImage(void * _Nonnull thisPtr, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, NSData * _Nonnull * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKGameActivityDefinition_LoadLeaderboards(void * _Nonnull thisPtr, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKGameActivity_CheckPendingGameActivityExistence(int64_t taskId, void (* _Nonnull onSuccess)(int64_t, BOOL), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKGameActivity_End(void * _Nonnull thisPtr) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKGameActivity_FindMatch(void * _Nonnull thisPtr, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKGameActivity_FindPlayersForHostedMatch(void * _Nonnull thisPtr, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN NSArray * _Nonnull * _Nonnull GKGameActivity_GetAchievementsAsArray(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void * _Nonnull GKGameActivity_GetActivityDefinition(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSTimeInterval GKGameActivity_GetCreationDate(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSTimeInterval GKGameActivity_GetDuration(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSTimeInterval GKGameActivity_GetEndDate(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nonnull GKGameActivity_GetIdentifier(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSArray * _Nonnull * _Nonnull GKGameActivity_GetLeaderboardScoresAsArray(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nullable GKGameActivity_GetPartyCode(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nullable GKGameActivity_GetPartyURL(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN double GKGameActivity_GetProgressOnAchievement(void * _Nonnull thisPtr, GKAchievement * _Nonnull * _Nonnull achievementPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSDictionary * _Nonnull * _Nonnull GKGameActivity_GetProperties(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void * _Nullable GKGameActivity_GetScoreOnLeaderboard(void * _Nonnull thisPtr, GKLeaderboard * _Nonnull * _Nonnull leaderboardPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSTimeInterval GKGameActivity_GetStartDate(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSUInteger GKGameActivity_GetState(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSArray * _Nonnull * _Nonnull GKGameActivity_GetValidPartyCodeAlphabet(void) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void * _Nonnull GKGameActivity_InitWithDefinition(void * _Nonnull activityDefinitionPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN BOOL GKGameActivity_IsValidPartyCode(int8_t * _Nonnull partyCode) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSTimeInterval GKGameActivity_LastResumeDate(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

@class GKMatchRequest;
SWIFT_EXTERN GKMatchRequest * _Nonnull * _Nullable GKGameActivity_MakeMatchRequest(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKGameActivity_Pause(void * _Nonnull thisPtr) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKGameActivity_RemoveAchievements(void * _Nonnull thisPtr, NSArray * _Nonnull * _Nonnull arrayPtr) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKGameActivity_RemoveScoresFromLeaderboards(void * _Nonnull thisPtr, NSArray * _Nonnull * _Nonnull arrayPtr) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKGameActivity_Resume(void * _Nonnull thisPtr) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKGameActivity_SetAchievementCompleted(void * _Nonnull thisPtr, GKAchievement * _Nonnull * _Nonnull achievementPtr) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKGameActivity_SetProgressOnAchievement(void * _Nonnull thisPtr, GKAchievement * _Nonnull * _Nonnull achievementPtr, double percentComplete) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKGameActivity_SetProperties(void * _Nonnull thisPtr, NSDictionary * _Nonnull * _Nonnull dictionaryPtr) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKGameActivity_SetScoreOnLoaderboard(void * _Nonnull thisPtr, GKLeaderboard * _Nonnull * _Nonnull leaderboardPtr, NSInteger score) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKGameActivity_SetScoreOnLoaderboardWithContext(void * _Nonnull thisPtr, GKLeaderboard * _Nonnull * _Nonnull leaderboardPtr, NSInteger score, NSUInteger context) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKGameActivity_SetWantsToPlayCallback(void (* _Nonnull callback)(GKPlayer * _Nonnull * _Nonnull, void * _Nonnull, void * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKGameActivity_Start(void * _Nonnull thisPtr) SWIFT_NOEXCEPT;

SWIFT_EXTERN void * _Nullable GKGameActivity_StartWithDefinition(void * _Nonnull activityDefinitionPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void * _Nullable GKGameActivity_StartWithDefinitionAndPartyCode(void * _Nonnull activityDefinitionPtr, int8_t * _Nonnull partyCode) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKGameActivity_WantsToPlayCallbackCompletionHandler_Invoke(void * _Nonnull completionHandlerContainerPtr, BOOL result) SWIFT_NOEXCEPT;

@class GKGameCenterViewController;
SWIFT_EXTERN GKGameCenterViewController * _Nonnull * _Nonnull GKGameCenterViewController_InitWithAchievementID(NSString * _Nonnull * _Nonnull achievementIDPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN GKGameCenterViewController * _Nonnull * _Nonnull GKGameCenterViewController_InitWithLeaderboard(GKLeaderboard * _Nonnull * _Nonnull leaderboardPtr, NSInteger playerScope) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN GKGameCenterViewController * _Nonnull * _Nonnull GKGameCenterViewController_InitWithLeaderboardID(NSString * _Nonnull * _Nonnull leaderboardIDPtr, NSInteger playerScope, NSInteger timeScope) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN GKGameCenterViewController * _Nonnull * _Nonnull GKGameCenterViewController_InitWithLeaderboardSetID(NSString * _Nonnull * _Nonnull leaderboardSetIDPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN GKGameCenterViewController * _Nonnull * _Nonnull GKGameCenterViewController_InitWithPlayer(GKPlayer * _Nonnull * _Nonnull gkPlayerPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN GKGameCenterViewController * _Nonnull * _Nonnull GKGameCenterViewController_InitWithState(NSInteger state) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKGameCenterViewController_Present(GKGameCenterViewController * _Nonnull * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t)) SWIFT_NOEXCEPT;

@class GKInvite;
SWIFT_EXTERN BOOL GKInvite_GetIsHosted(GKInvite * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN uint32_t GKInvite_GetPlayerAttributes(GKInvite * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSInteger GKInvite_GetPlayerGroup(GKInvite * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN GKPlayer * _Nonnull * _Nullable GKInvite_GetSender(GKInvite * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKInvite_SetInviteAcceptedCallback(void (* _Nonnull callback)(GKPlayer * _Nonnull * _Nonnull, GKInvite * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN NSInteger GKLeaderboardEntry_GetContext(void * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSTimeInterval GKLeaderboardEntry_GetDate(void * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nonnull GKLeaderboardEntry_GetFormattedScore(void * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN GKPlayer * _Nonnull * _Nonnull GKLeaderboardEntry_GetPlayer(void * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSInteger GKLeaderboardEntry_GetRank(void * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSInteger GKLeaderboardEntry_GetScore(void * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSUInteger GKLeaderboardScore_GetContext(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nonnull GKLeaderboardScore_GetLeaderboardID(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN GKPlayer * _Nonnull * _Nonnull GKLeaderboardScore_GetPlayer(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSInteger GKLeaderboardScore_GetValue(void * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKLeaderboardScore_SetContext(void * _Nonnull thisPtr, NSUInteger context) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKLeaderboardScore_SetLeaderboardID(void * _Nonnull thisPtr, int8_t * _Nonnull leaderboardID) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKLeaderboardScore_SetPlayer(void * _Nonnull thisPtr, GKPlayer * _Nonnull * _Nonnull playerPtr) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKLeaderboardScore_SetValue(void * _Nonnull thisPtr, NSInteger value) SWIFT_NOEXCEPT;

@class GKLeaderboardSet;
SWIFT_EXTERN int8_t * _Nullable GKLeaderboardSet_GetGroupIdentifier(GKLeaderboardSet * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nullable GKLeaderboardSet_GetIdentifier(GKLeaderboardSet * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nonnull GKLeaderboardSet_GetTitle(GKLeaderboardSet * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKLeaderboardSet_LoadImage(GKLeaderboardSet * _Nonnull * _Nonnull pointer, int64_t taskId, void (* _Nonnull onImageLoaded)(int64_t, NSData * _Nonnull * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKLeaderboardSet_LoadLeaderboardSets(int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKLeaderboardSet_LoadLeaderboards(GKLeaderboardSet * _Nonnull * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN int8_t * _Nullable GKLeaderboard_GetActivityIdentifier(GKLeaderboard * _Nonnull * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSDictionary * _Nonnull * _Nullable GKLeaderboard_GetActivityProperties(GKLeaderboard * _Nonnull * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nullable GKLeaderboard_GetBaseLeaderboardId(GKLeaderboard * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSInteger GKLeaderboard_GetDuration(GKLeaderboard * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nullable GKLeaderboard_GetGroupIdentifier(GKLeaderboard * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nullable GKLeaderboard_GetLeaderboardDescription(GKLeaderboard * _Nonnull * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSTimeInterval GKLeaderboard_GetNextStartDate(GKLeaderboard * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSUInteger GKLeaderboard_GetReleaseState(GKLeaderboard * _Nonnull * _Nonnull thisPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSTimeInterval GKLeaderboard_GetStartDate(GKLeaderboard * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nullable GKLeaderboard_GetTitle(GKLeaderboard * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSInteger GKLeaderboard_GetType(GKLeaderboard * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN BOOL GKLeaderboard_IsHidden(GKLeaderboard * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKLeaderboard_LoadEntries(GKLeaderboard * _Nonnull * _Nonnull pointer, int64_t taskId, NSInteger playerScope, NSInteger timeScope, NSInteger rankMin, NSInteger rankMax, void (* _Nonnull onSuccess)(int64_t, void * _Nullable, NSArray * _Nonnull * _Nullable, NSInteger), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKLeaderboard_LoadEntriesForPlayers(GKLeaderboard * _Nonnull * _Nonnull gkLeaderboardPtr, int64_t taskId, NSArray * _Nonnull * _Nonnull playersPtr, NSInteger timeScope, void (* _Nonnull onSuccess)(int64_t, void * _Nullable, NSArray * _Nonnull * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKLeaderboard_LoadImage(GKLeaderboard * _Nonnull * _Nonnull pointer, int64_t taskId, void (* _Nonnull onImageLoaded)(int64_t, NSData * _Nonnull * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKLeaderboard_LoadLeaderboards(int64_t taskId, NSArray * _Nonnull * _Nullable nsArrayIds, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKLeaderboard_LoadPreviousOccurrence(GKLeaderboard * _Nonnull * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKLeaderboard_SubmitScore(GKLeaderboard * _Nonnull * _Nonnull pointer, int64_t taskId, NSInteger score, NSInteger context, GKPlayer * _Nonnull * _Nonnull player, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

@class GKLocalPlayer;
SWIFT_EXTERN void GKLocalPlayer_DeleteSavedGames(GKLocalPlayer * _Nonnull * _Nonnull gkLocalPlayerPtr, int64_t taskId, int8_t * _Nonnull name, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKLocalPlayer_FetchItemsForIdentityVerificationSignature(GKLocalPlayer * _Nonnull * _Nonnull gkLocalPlayerPtr, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, int8_t * _Nonnull, NSData * _Nonnull * _Nonnull, NSData * _Nonnull * _Nonnull, uint64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKLocalPlayer_FetchSavedGames(GKLocalPlayer * _Nonnull * _Nonnull gkLocalPlayerPtr, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN BOOL GKLocalPlayer_GetIsAuthenticated(GKLocalPlayer * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN BOOL GKLocalPlayer_GetIsMultiplayerGamingRestricted(GKLocalPlayer * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN BOOL GKLocalPlayer_GetIsPersonalizedCommunicationRestricted(GKLocalPlayer * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN BOOL GKLocalPlayer_GetIsUnderage(GKLocalPlayer * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN GKLocalPlayer * _Nonnull * _Nonnull GKLocalPlayer_GetLocal(void) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKLocalPlayer_LoadChallengableFriends(GKLocalPlayer * _Nonnull * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKLocalPlayer_LoadDefaultLeaderboardIdentifier(GKLocalPlayer * _Nonnull * _Nonnull gkLocalPlayerPtr, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKLocalPlayer_LoadFriends(GKLocalPlayer * _Nonnull * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKLocalPlayer_LoadFriendsAuthorizationStatus(GKLocalPlayer * _Nonnull * _Nonnull gkLocalPlayerPtr, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, NSInteger), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKLocalPlayer_LoadFriendsWithIdentifiers(GKLocalPlayer * _Nonnull * _Nonnull gkLocalPlayerPtr, int64_t taskId, NSArray * _Nonnull * _Nonnull identifiersPtr, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKLocalPlayer_LoadRecentPlayers(GKLocalPlayer * _Nonnull * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKLocalPlayer_ResolveConflictingSavedGames(GKLocalPlayer * _Nonnull * _Nonnull gkLocalPlayerPtr, int64_t taskId, NSArray * _Nonnull * _Nonnull conflictingSavedGamesPtr, NSData * _Nonnull * _Nonnull nsDataPtr, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKLocalPlayer_SaveGameData(GKLocalPlayer * _Nonnull * _Nonnull gkLocalPlayerPtr, int64_t taskId, NSData * _Nonnull * _Nonnull nsDataPtr, int8_t * _Nonnull name, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKLocalPlayer_SetAuthenticateHandler(int64_t taskId, void (* _Nonnull onAuthenticate)(int64_t, void * _Nullable), void (* _Nonnull onAuthenticateError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKLocalPlayer_SetDefaultLeaderboardIdentifier(GKLocalPlayer * _Nonnull * _Nonnull gkLocalPlayerPtr, int64_t taskId, NSString * _Nonnull * _Nonnull identifierPtr, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchDelegate_SetDataReceived(GKWMatchDelegate * _Nonnull * _Nonnull pointer, void (* _Nonnull callback)(GKWMatchDelegate * _Nonnull * _Nonnull, NSData * _Nonnull * _Nonnull, GKPlayer * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchDelegate_SetDataReceivedForPlayer(GKWMatchDelegate * _Nonnull * _Nonnull pointer, void (* _Nonnull callback)(GKWMatchDelegate * _Nonnull * _Nonnull, NSData * _Nonnull * _Nonnull, GKPlayer * _Nonnull * _Nonnull, GKPlayer * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchDelegate_SetDidFailWithError(GKWMatchDelegate * _Nonnull * _Nonnull pointer, void (* _Nonnull callback)(GKWMatchDelegate * _Nonnull * _Nonnull, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchDelegate_SetPlayerConnectedDidChange(GKWMatchDelegate * _Nonnull * _Nonnull pointer, void (* _Nonnull callback)(GKWMatchDelegate * _Nonnull * _Nonnull, GKPlayer * _Nonnull * _Nonnull, GKPlayerConnectionState)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchDelegate_SetShouldReinviteDisconnectedPlayer(GKWMatchDelegate * _Nonnull * _Nonnull pointer, BOOL (* _Nonnull callback)(GKWMatchDelegate * _Nonnull * _Nonnull, GKPlayer * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

@class GKMatchmaker;
SWIFT_EXTERN void GKMatchMaker_FindMatchedPlayers(GKMatchmaker * _Nonnull * _Nonnull gkMatchmakerPtr, int64_t taskId, GKMatchRequest * _Nonnull * _Nonnull gkMatchRequestPtr, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN NSInteger GKMatchRequest_GetDefaultNumberOfPlayers(GKMatchRequest * _Nonnull * _Nonnull gkMatchRequestPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nullable GKMatchRequest_GetInviteMessage(GKMatchRequest * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSInteger GKMatchRequest_GetMaxPlayers(GKMatchRequest * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSInteger GKMatchRequest_GetMaxPlayersAllowedForMatchOfType(NSUInteger matchType) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSInteger GKMatchRequest_GetMinPlayers(GKMatchRequest * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN uint32_t GKMatchRequest_GetPlayerAttributes(GKMatchRequest * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSInteger GKMatchRequest_GetPlayerGroup(GKMatchRequest * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSDictionary * _Nonnull * _Nullable GKMatchRequest_GetProperties(GKMatchRequest * _Nonnull * _Nonnull gkMatchRequestPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nullable GKMatchRequest_GetQueueName(GKMatchRequest * _Nonnull * _Nonnull gkMatchRequestPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSDictionary * _Nonnull * _Nullable GKMatchRequest_GetRecipientProperties(GKMatchRequest * _Nonnull * _Nonnull gkMatchRequestPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSArray * _Nonnull * _Nullable GKMatchRequest_GetRecipients(GKMatchRequest * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN GKMatchRequest * _Nonnull * _Nonnull GKMatchRequest_Init(void) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKMatchRequest_SetDefaultNumberOfPlayers(GKMatchRequest * _Nonnull * _Nonnull gkMatchRequestPtr, NSInteger value) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchRequest_SetInviteMessage(GKMatchRequest * _Nonnull * _Nonnull pointer, int8_t * _Nullable value) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchRequest_SetMaxPlayers(GKMatchRequest * _Nonnull * _Nonnull pointer, NSInteger value) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchRequest_SetMinPlayers(GKMatchRequest * _Nonnull * _Nonnull pointer, NSInteger value) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchRequest_SetPlayerAttributes(GKMatchRequest * _Nonnull * _Nonnull pointer, uint32_t value) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchRequest_SetPlayerGroup(GKMatchRequest * _Nonnull * _Nonnull pointer, NSInteger value) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchRequest_SetProperties(GKMatchRequest * _Nonnull * _Nonnull gkMatchRequestPtr, NSDictionary * _Nonnull * _Nullable nsDictionaryPtr) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchRequest_SetQueueName(GKMatchRequest * _Nonnull * _Nonnull gkMatchRequestPtr, int8_t * _Nullable value) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchRequest_SetRecipientProperties(GKMatchRequest * _Nonnull * _Nonnull gkMatchRequestPtr, NSDictionary * _Nonnull * _Nullable nsDictionaryPtr) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchRequest_SetRecipientResponseHandler(GKMatchRequest * _Nonnull * _Nonnull gkMatchRequestPtr, void (* _Nullable recipientResponseHandler)(GKMatchRequest * _Nonnull * _Nonnull, GKPlayer * _Nonnull * _Nonnull, NSInteger)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchRequest_SetRecipients(GKMatchRequest * _Nonnull * _Nonnull pointer, NSArray * _Nonnull * _Nullable value) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatch_ChooseBestHostingPlayer(GKMatch * _Nonnull * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatch_Disconnect(GKMatch * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT;

SWIFT_EXTERN GKWMatchDelegate * _Nonnull * _Nullable GKMatch_GetDelegate(GKMatch * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSInteger GKMatch_GetExpectedPlayerCount(GKMatch * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSDictionary * _Nonnull * _Nullable GKMatch_GetPlayerProperties(GKMatch * _Nonnull * _Nonnull gkMatchPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSArray * _Nonnull * _Nonnull GKMatch_GetPlayers(GKMatch * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSDictionary * _Nonnull * _Nullable GKMatch_GetProperties(GKMatch * _Nonnull * _Nonnull gkMatchPtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKMatch_Rematch(GKMatch * _Nonnull * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN NSError * _Nonnull * _Nullable GKMatch_SendTo(GKMatch * _Nonnull * _Nonnull pointer, NSData * _Nonnull * _Nonnull dataPtr, NSArray * _Nonnull * _Nonnull players, NSInteger sendMode) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSError * _Nonnull * _Nullable GKMatch_SendToAll(GKMatch * _Nonnull * _Nonnull pointer, NSData * _Nonnull * _Nonnull dataPtr, NSInteger sendMode) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

@class GKVoiceChat;
SWIFT_EXTERN GKVoiceChat * _Nonnull * _Nullable GKMatch_VoiceChat(GKMatch * _Nonnull * _Nonnull pointer, int8_t * _Nonnull channel) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKMatchmakerViewControllerDelegate_CallGetMatchPropertiesForRecipientCompletionHandler(void * _Nonnull completionHandlerWrapperPtr, NSDictionary * _Nonnull * _Nonnull nsDictionaryPtr) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchmakerViewControllerDelegate_SetDidFailWithErrorCallback(GKWMatchmakerViewControllerDelegate * _Nonnull * _Nonnull pointer, void (* _Nonnull callback)(GKWMatchmakerViewControllerDelegate * _Nonnull * _Nonnull, GKMatchmakerViewController * _Nonnull * _Nonnull, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchmakerViewControllerDelegate_SetDidFindHostedPlayersCallback(GKWMatchmakerViewControllerDelegate * _Nonnull * _Nonnull pointer, void (* _Nonnull callback)(GKWMatchmakerViewControllerDelegate * _Nonnull * _Nonnull, GKMatchmakerViewController * _Nonnull * _Nonnull, NSArray * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchmakerViewControllerDelegate_SetDidFindMatchCallback(GKWMatchmakerViewControllerDelegate * _Nonnull * _Nonnull pointer, void (* _Nonnull callback)(GKWMatchmakerViewControllerDelegate * _Nonnull * _Nonnull, GKMatchmakerViewController * _Nonnull * _Nonnull, GKMatch * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchmakerViewControllerDelegate_SetGetMatchPropertiesForRecipientCallback(GKWMatchmakerViewControllerDelegate * _Nonnull * _Nonnull pointer, void (* _Nonnull callback)(GKWMatchmakerViewControllerDelegate * _Nonnull * _Nonnull, GKMatchmakerViewController * _Nonnull * _Nonnull, GKPlayer * _Nonnull * _Nonnull, void * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchmakerViewControllerDelegate_SetHostedPlayerDidAccept(GKWMatchmakerViewControllerDelegate * _Nonnull * _Nonnull pointer, void (* _Nonnull callback)(GKWMatchmakerViewControllerDelegate * _Nonnull * _Nonnull, GKMatchmakerViewController * _Nonnull * _Nonnull, GKPlayer * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchmakerViewControllerDelegate_SetMatchmakingCanceledCallback(GKWMatchmakerViewControllerDelegate * _Nonnull * _Nonnull pointer, void (* _Nonnull callback)(GKWMatchmakerViewControllerDelegate * _Nonnull * _Nonnull, GKMatchmakerViewController * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchmakerViewController_AddPlayersToMatch(GKMatchmakerViewController * _Nonnull * _Nonnull gkMatchmakerViewControllerPtr, GKMatch * _Nonnull * _Nonnull gkMatchPtr) SWIFT_NOEXCEPT;

SWIFT_EXTERN BOOL GKMatchmakerViewController_GetCanStartWithMinimumPlayers(GKMatchmakerViewController * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN BOOL GKMatchmakerViewController_GetIsHosted(GKMatchmakerViewController * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN GKMatchRequest * _Nonnull * _Nonnull GKMatchmakerViewController_GetMatchRequest(GKMatchmakerViewController * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN GKWMatchmakerViewControllerDelegate * _Nonnull * _Nullable GKMatchmakerViewController_GetMatchmakerDelegate(GKMatchmakerViewController * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSInteger GKMatchmakerViewController_GetMatchmakingMode(GKMatchmakerViewController * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN GKMatchmakerViewController * _Nonnull * _Nonnull GKMatchmakerViewController_InitWithInvite(GKInvite * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN GKMatchmakerViewController * _Nonnull * _Nonnull GKMatchmakerViewController_InitWithMatchRequest(GKMatchRequest * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKMatchmakerViewController_Present(GKMatchmakerViewController * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchmakerViewController_SetCanStartWithMinimumPlayers(GKMatchmakerViewController * _Nonnull * _Nonnull pointer, BOOL value) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchmakerViewController_SetHostedPlayerDidConnect(GKMatchmakerViewController * _Nonnull * _Nonnull gkMatchmakerViewControllerPtr, GKPlayer * _Nonnull * _Nonnull gkPlayerPtr, BOOL didConnect) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchmakerViewController_SetIsHosted(GKMatchmakerViewController * _Nonnull * _Nonnull pointer, BOOL value) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchmakerViewController_SetMatchmakingMode(GKMatchmakerViewController * _Nonnull * _Nonnull pointer, NSInteger value) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchmaker_AddPlayers(GKMatchmaker * _Nonnull * _Nonnull pointer, int64_t taskId, GKMatch * _Nonnull * _Nonnull matchPtr, GKMatchRequest * _Nonnull * _Nonnull matchRequestPtr, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchmaker_Cancel(GKMatchmaker * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchmaker_CancelPendingInvite(GKMatchmaker * _Nonnull * _Nonnull pointer, GKPlayer * _Nonnull * _Nonnull playerPtr) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchmaker_FindMatch(GKMatchmaker * _Nonnull * _Nonnull pointer, int64_t taskId, GKMatchRequest * _Nonnull * _Nonnull matchRequestPtr, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchmaker_FindPlayers(GKMatchmaker * _Nonnull * _Nonnull pointer, int64_t taskId, GKMatchRequest * _Nonnull * _Nonnull matchRequestPtr, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchmaker_FinishMatchmaking(GKMatchmaker * _Nonnull * _Nonnull gkMatchmakerPtr, GKMatch * _Nonnull * _Nonnull gkMatchPtr) SWIFT_NOEXCEPT;

SWIFT_EXTERN GKMatchmaker * _Nonnull * _Nonnull GKMatchmaker_GetShared(void) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKMatchmaker_MatchForInvite(GKMatchmaker * _Nonnull * _Nonnull pointer, int64_t taskId, GKInvite * _Nonnull * _Nonnull invitePtr, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchmaker_QueryActivity(GKMatchmaker * _Nonnull * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, NSInteger), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchmaker_QueryPlayerGroupActivity(GKMatchmaker * _Nonnull * _Nonnull pointer, int64_t taskId, NSInteger groupId, void (* _Nonnull onSuccess)(int64_t, NSInteger), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchmaker_QueryQueueActivity(GKMatchmaker * _Nonnull * _Nonnull gkMatchmakerPtr, int64_t taskId, int8_t * _Nonnull queueName, void (* _Nonnull onSuccess)(int64_t, NSInteger), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchmaker_StartBrowsingForNearbyPlayers(GKMatchmaker * _Nonnull * _Nonnull gkMatchmakerPtr, void (* _Nonnull nearbyPlayerReachableHandler)(GKMatchmaker * _Nonnull * _Nonnull, GKPlayer * _Nonnull * _Nonnull, BOOL)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchmaker_StartGroupActivity(GKMatchmaker * _Nonnull * _Nonnull gkMatchmakerPtr, void (* _Nonnull groupActivityPlayerHandler)(GKMatchmaker * _Nonnull * _Nonnull, GKPlayer * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchmaker_StopBrowsingForNearbyPlayers(GKMatchmaker * _Nonnull * _Nonnull gkMatchmakerPtr) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKMatchmaker_StopGroupActivity(GKMatchmaker * _Nonnull * _Nonnull gkMatchmakerPtr) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKNotificationBanner_Show(int8_t * _Nonnull title, int8_t * _Nonnull message) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKNotificationBanner_ShowWithDuration(int8_t * _Nonnull title, int8_t * _Nonnull message, NSTimeInterval duration) SWIFT_NOEXCEPT;

SWIFT_EXTERN GKPlayer * _Nonnull * _Nonnull GKPlayer_AnonymousGuestPlayer(int8_t * _Nonnull identifier) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nonnull GKPlayer_GetAlias(GKPlayer * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nonnull GKPlayer_GetDisplayName(GKPlayer * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nonnull GKPlayer_GetGamePlayerId(GKPlayer * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nullable GKPlayer_GetGuestIdentifier(GKPlayer * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN BOOL GKPlayer_GetIsInvitable(GKPlayer * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN BOOL GKPlayer_GetScopedIDsArePersistent(GKPlayer * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN BOOL GKPlayer_GetScopedIdsArePersistent(GKPlayer * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nonnull GKPlayer_GetTeamPlayerId(GKPlayer * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKPlayer_LoadPhoto(GKPlayer * _Nonnull * _Nonnull pointer, int64_t taskId, NSInteger photoSize, void (* _Nonnull onImageLoaded)(int64_t, NSData * _Nonnull * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

@class GKSavedGame;
SWIFT_EXTERN int8_t * _Nullable GKSavedGame_GetDeviceName(GKSavedGame * _Nonnull * _Nonnull gkSavedGamePtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSTimeInterval GKSavedGame_GetModificationDate(GKSavedGame * _Nonnull * _Nonnull gkSavedGamePtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nullable GKSavedGame_GetName(GKSavedGame * _Nonnull * _Nonnull gkSavedGamePtr) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKSavedGame_LoadData(GKSavedGame * _Nonnull * _Nonnull gkSavedGamePtr, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKSavedGame_SetSavedGameModifiedCallback(void (* _Nonnull callback)(GKPlayer * _Nonnull * _Nonnull, GKSavedGame * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKSavedGame_SetSavedGamesConflictingCallback(void (* _Nonnull callback)(GKPlayer * _Nonnull * _Nonnull, NSArray * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

@class GKScoreChallenge;
@class GKScore;
SWIFT_EXTERN GKScore * _Nonnull * _Nullable GKScoreChallenge_GetScore(GKScoreChallenge * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

@class GKTurnBasedExchangeReply;
SWIFT_EXTERN NSData * _Nonnull * _Nullable GKTurnBasedExchangeReply_GetData(GKTurnBasedExchangeReply * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nullable GKTurnBasedExchangeReply_GetMessage(GKTurnBasedExchangeReply * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

@class GKTurnBasedParticipant;
SWIFT_EXTERN GKTurnBasedParticipant * _Nonnull * _Nonnull GKTurnBasedExchangeReply_GetRecipient(GKTurnBasedExchangeReply * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSTimeInterval GKTurnBasedExchangeReply_GetReplyDate(GKTurnBasedExchangeReply * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

@class GKTurnBasedExchange;
SWIFT_EXTERN void GKTurnBasedExchange_Cancel(GKTurnBasedExchange * _Nonnull * _Nonnull pointer, int64_t taskId, int8_t * _Nonnull localizableMessageKey, NSArray * _Nonnull * _Nonnull argumentsPtr, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN NSTimeInterval GKTurnBasedExchange_GetCompletionDate(GKTurnBasedExchange * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSData * _Nonnull * _Nullable GKTurnBasedExchange_GetData(GKTurnBasedExchange * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nonnull GKTurnBasedExchange_GetExchangeID(GKTurnBasedExchange * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nullable GKTurnBasedExchange_GetMessage(GKTurnBasedExchange * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSArray * _Nonnull * _Nonnull GKTurnBasedExchange_GetRecipients(GKTurnBasedExchange * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSArray * _Nonnull * _Nullable GKTurnBasedExchange_GetReplies(GKTurnBasedExchange * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSTimeInterval GKTurnBasedExchange_GetSendDate(GKTurnBasedExchange * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN GKTurnBasedParticipant * _Nonnull * _Nonnull GKTurnBasedExchange_GetSender(GKTurnBasedExchange * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t GKTurnBasedExchange_GetStatus(GKTurnBasedExchange * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSTimeInterval GKTurnBasedExchange_GetTimeoutDate(GKTurnBasedExchange * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKTurnBasedExchange_Reply(GKTurnBasedExchange * _Nonnull * _Nonnull pointer, int64_t taskId, int8_t * _Nonnull localizableMessageKey, NSArray * _Nonnull * _Nonnull argumentsPtr, NSData * _Nonnull * _Nonnull dataPtr, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

@class GKTurnBasedMatch;
SWIFT_EXTERN void GKTurnBasedMatch_AcceptInvite(GKTurnBasedMatch * _Nonnull * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatch_DeclineInvite(GKTurnBasedMatch * _Nonnull * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatch_EndMatchInTurn(GKTurnBasedMatch * _Nonnull * _Nonnull pointer, int64_t taskId, NSData * _Nonnull * _Nonnull dataPtr, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatch_EndTurn(GKTurnBasedMatch * _Nonnull * _Nonnull pointer, int64_t taskId, NSArray * _Nonnull * _Nonnull participantsPtr, double timeout, NSData * _Nonnull * _Nonnull dataPtr, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatch_Find(int64_t taskId, GKMatchRequest * _Nonnull * _Nonnull matchRequestPtr, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN double GKTurnBasedMatch_GKExchangeTimeoutDefault(void) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN double GKTurnBasedMatch_GKExchangeTimeoutNone(void) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSArray * _Nonnull * _Nullable GKTurnBasedMatch_GetActiveExchanges(GKTurnBasedMatch * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSArray * _Nonnull * _Nullable GKTurnBasedMatch_GetCompletedExchanges(GKTurnBasedMatch * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSTimeInterval GKTurnBasedMatch_GetCreationDate(GKTurnBasedMatch * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN GKTurnBasedParticipant * _Nonnull * _Nullable GKTurnBasedMatch_GetCurrentParticipant(GKTurnBasedMatch * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSInteger GKTurnBasedMatch_GetExchangeDataMaximumSize(GKTurnBasedMatch * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSInteger GKTurnBasedMatch_GetExchangeMaxInitiatedExchangesPerPlayer(GKTurnBasedMatch * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSArray * _Nonnull * _Nullable GKTurnBasedMatch_GetExchanges(GKTurnBasedMatch * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSData * _Nonnull * _Nullable GKTurnBasedMatch_GetMatchData(GKTurnBasedMatch * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSInteger GKTurnBasedMatch_GetMatchDataMaximumSize(GKTurnBasedMatch * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nonnull GKTurnBasedMatch_GetMatchID(GKTurnBasedMatch * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nullable GKTurnBasedMatch_GetMessage(GKTurnBasedMatch * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSArray * _Nonnull * _Nonnull GKTurnBasedMatch_GetParticipants(GKTurnBasedMatch * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSInteger GKTurnBasedMatch_GetStatus(GKTurnBasedMatch * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN double GKTurnBasedMatch_GetTurnTimeoutDefault(void) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN double GKTurnBasedMatch_GetTurnTimeoutNone(void) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKTurnBasedMatch_Load(int64_t taskId, int8_t * _Nonnull matchId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatch_LoadMatchData(GKTurnBasedMatch * _Nonnull * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatch_LoadMatches(int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatch_ParticipantQuitInTurn(GKTurnBasedMatch * _Nonnull * _Nonnull pointer, int64_t taskId, NSInteger outcome, NSArray * _Nonnull * _Nonnull participantsPtr, double timeout, NSData * _Nonnull * _Nonnull dataPtr, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatch_ParticipantQuitOutOfTurn(GKTurnBasedMatch * _Nonnull * _Nonnull pointer, int64_t taskId, NSInteger outcome, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatch_Rematch(GKTurnBasedMatch * _Nonnull * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatch_Remove(GKTurnBasedMatch * _Nonnull * _Nonnull pointer, int64_t taskId, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatch_SaveCurrentTurn(GKTurnBasedMatch * _Nonnull * _Nonnull pointer, int64_t taskId, NSData * _Nonnull * _Nonnull dataPtr, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatch_SaveMergedMatch(GKTurnBasedMatch * _Nonnull * _Nonnull pointer, int64_t taskId, NSData * _Nonnull * _Nonnull dataPtr, NSArray * _Nonnull * _Nonnull exchangesPtr, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatch_SendExchange(GKTurnBasedMatch * _Nonnull * _Nonnull pointer, int64_t taskId, NSArray * _Nonnull * _Nonnull participantsPtr, NSData * _Nonnull * _Nonnull dataPtr, int8_t * _Nonnull localizableMessageKey, NSArray * _Nonnull * _Nonnull argumentsPtr, double timeout, void (* _Nonnull onSuccess)(int64_t, void * _Nullable), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatch_SendReminder(GKTurnBasedMatch * _Nonnull * _Nonnull pointer, int64_t taskId, NSArray * _Nonnull * _Nonnull participantsPtr, int8_t * _Nonnull localizableMessageKey, NSArray * _Nonnull * _Nonnull argumentsPtr, void (* _Nonnull onSuccess)(int64_t), void (* _Nonnull onError)(int64_t, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatch_SetExchangeCanceledCallback(void (* _Nonnull callback)(GKPlayer * _Nonnull * _Nonnull, GKTurnBasedExchange * _Nonnull * _Nonnull, GKTurnBasedMatch * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatch_SetExchangeCompletedCallback(void (* _Nonnull callback)(GKPlayer * _Nonnull * _Nonnull, NSArray * _Nonnull * _Nonnull, GKTurnBasedMatch * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatch_SetExchangeReceivedCallback(void (* _Nonnull callback)(GKPlayer * _Nonnull * _Nonnull, GKTurnBasedExchange * _Nonnull * _Nonnull, GKTurnBasedMatch * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatch_SetLocalizableMessageWithKey(GKTurnBasedMatch * _Nonnull * _Nonnull gkTurnBasedMatchPtr, int8_t * _Nonnull key, NSArray * _Nonnull * _Nullable argumentsPtr) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatch_SetMatchEndedCallback(void (* _Nonnull callback)(GKPlayer * _Nonnull * _Nonnull, GKTurnBasedMatch * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatch_SetMatchRequestedWithOtherPlayersCallback(void (* _Nonnull callback)(GKPlayer * _Nonnull * _Nonnull, NSArray * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatch_SetPlayerWantsToQuitMatchCallback(void (* _Nonnull callback)(GKPlayer * _Nonnull * _Nonnull, GKTurnBasedMatch * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatch_SetTurnEventReceivedCallback(void (* _Nonnull callback)(GKPlayer * _Nonnull * _Nonnull, GKTurnBasedMatch * _Nonnull * _Nonnull, BOOL)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatchmakerViewControllerDelegate_SetDidFailWithErrorCallback(GKWTurnBasedMatchmakerViewControllerDelegate * _Nonnull * _Nonnull pointer, void (* _Nonnull callback)(GKWTurnBasedMatchmakerViewControllerDelegate * _Nonnull * _Nonnull, GKTurnBasedMatchmakerViewController * _Nonnull * _Nonnull, NSError * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatchmakerViewControllerDelegate_SetDidFindMatchCallback(GKWTurnBasedMatchmakerViewControllerDelegate * _Nonnull * _Nonnull pointer, void (* _Nonnull callback)(GKWTurnBasedMatchmakerViewControllerDelegate * _Nonnull * _Nonnull, GKTurnBasedMatchmakerViewController * _Nonnull * _Nonnull, GKTurnBasedMatch * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatchmakerViewControllerDelegate_SetMatchmakingCanceledCallback(GKWTurnBasedMatchmakerViewControllerDelegate * _Nonnull * _Nonnull pointer, void (* _Nonnull callback)(GKWTurnBasedMatchmakerViewControllerDelegate * _Nonnull * _Nonnull, GKTurnBasedMatchmakerViewController * _Nonnull * _Nonnull)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatchmakerViewController_Dismiss(GKTurnBasedMatchmakerViewController * _Nonnull viewController) SWIFT_NOEXCEPT;

SWIFT_EXTERN GKWTurnBasedMatchmakerViewControllerDelegate * _Nonnull * _Nonnull GKTurnBasedMatchmakerViewController_GetMatchmakerDelegate(GKTurnBasedMatchmakerViewController * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSInteger GKTurnBasedMatchmakerViewController_GetMatchmakingMode(GKTurnBasedMatchmakerViewController * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN BOOL GKTurnBasedMatchmakerViewController_GetShowExistingMatches(GKTurnBasedMatchmakerViewController * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN GKTurnBasedMatchmakerViewController * _Nonnull * _Nonnull GKTurnBasedMatchmakerViewController_InitWithMatchRequest(GKMatchRequest * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKTurnBasedMatchmakerViewController_Present(GKTurnBasedMatchmakerViewController * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatchmakerViewController_SetMatchmakingMode(GKTurnBasedMatchmakerViewController * _Nonnull * _Nonnull pointer, NSInteger value) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKTurnBasedMatchmakerViewController_SetShowExistingMatches(GKTurnBasedMatchmakerViewController * _Nonnull * _Nonnull pointer, BOOL value) SWIFT_NOEXCEPT;

SWIFT_EXTERN NSTimeInterval GKTurnBasedParticipant_GetLastTurnDate(GKTurnBasedParticipant * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSInteger GKTurnBasedParticipant_GetMatchOutcome(GKTurnBasedParticipant * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN GKPlayer * _Nonnull * _Nullable GKTurnBasedParticipant_GetPlayer(GKTurnBasedParticipant * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSInteger GKTurnBasedParticipant_GetStatus(GKTurnBasedParticipant * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSTimeInterval GKTurnBasedParticipant_GetTimeoutDate(GKTurnBasedParticipant * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKTurnBasedParticipant_SetMatchOutcome(GKTurnBasedParticipant * _Nonnull * _Nonnull pointer, NSInteger value) SWIFT_NOEXCEPT;

SWIFT_EXTERN BOOL GKVoiceChat_GetIsActive(GKVoiceChat * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN BOOL GKVoiceChat_GetIsVoIPAllowed(GKVoiceChat * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN int8_t * _Nonnull GKVoiceChat_GetName(GKVoiceChat * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN NSArray * _Nonnull * _Nonnull GKVoiceChat_GetPlayers(GKVoiceChat * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN float GKVoiceChat_GetVolume(GKVoiceChat * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT SWIFT_WARN_UNUSED_RESULT;

SWIFT_EXTERN void GKVoiceChat_PlayerVoiceChatStateDidChangeHandler(GKVoiceChat * _Nonnull * _Nonnull pointer, void (* _Nonnull callback)(GKVoiceChat * _Nonnull * _Nonnull, GKPlayer * _Nonnull * _Nonnull, enum GKVoiceChatPlayerState)) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKVoiceChat_SetIsActive(GKVoiceChat * _Nonnull * _Nonnull pointer, BOOL value) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKVoiceChat_SetPlayer(GKVoiceChat * _Nonnull * _Nonnull pointer, GKPlayer * _Nonnull * _Nonnull playerPtr, BOOL isMuted) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKVoiceChat_SetVolume(GKVoiceChat * _Nonnull * _Nonnull pointer, float value) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKVoiceChat_Start(GKVoiceChat * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT;

SWIFT_EXTERN void GKVoiceChat_Stop(GKVoiceChat * _Nonnull * _Nonnull pointer) SWIFT_NOEXCEPT;

@class GKGameActivity;
@interface GKWLocalPlayerListener (SWIFT_EXTENSION(GameKitWrapper)) <GKGameActivityListener>
- (void)player:(GKPlayer * _Nonnull)player wantsToPlayGameActivity:(GKGameActivity * _Nonnull)activity completionHandler:(void (^ _Nonnull)(BOOL))completion SWIFT_AVAILABILITY(visionos,introduced=26.0) SWIFT_AVAILABILITY(tvos,introduced=26.0) SWIFT_AVAILABILITY(macos,introduced=26.0) SWIFT_AVAILABILITY(ios,introduced=26.0);
@end

@interface GKWLocalPlayerListener (SWIFT_EXTENSION(GameKitWrapper)) <GKInviteEventListener>
- (void)player:(GKPlayer * _Nonnull)player didAcceptInvite:(GKInvite * _Nonnull)invite;
@end

@interface GKWLocalPlayerListener (SWIFT_EXTENSION(GameKitWrapper)) <GKSavedGameListener>
- (void)player:(GKPlayer * _Nonnull)player didModifySavedGame:(GKSavedGame * _Nonnull)savedGame;
- (void)player:(GKPlayer * _Nonnull)player hasConflictingSavedGames:(NSArray<GKSavedGame *> * _Nonnull)savedGames;
@end

@interface GKWLocalPlayerListener (SWIFT_EXTENSION(GameKitWrapper)) <GKChallengeListener>
- (void)player:(GKPlayer * _Nonnull)player didReceiveChallenge:(GKChallenge * _Nonnull)challenge;
- (void)player:(GKPlayer * _Nonnull)player wantsToPlayChallenge:(GKChallenge * _Nonnull)challenge;
- (void)player:(GKPlayer * _Nonnull)player didCompleteChallenge:(GKChallenge * _Nonnull)challenge issuedByFriend:(GKPlayer * _Nonnull)friendPlayer;
- (void)player:(GKPlayer * _Nonnull)player issuedChallengeWasCompleted:(GKChallenge * _Nonnull)challenge byFriend:(GKPlayer * _Nonnull)friendPlayer;
@end

@interface GKWLocalPlayerListener (SWIFT_EXTENSION(GameKitWrapper)) <GKTurnBasedEventListener>
- (void)player:(GKPlayer * _Nonnull)player receivedExchangeRequest:(GKTurnBasedExchange * _Nonnull)exchange forMatch:(GKTurnBasedMatch * _Nonnull)match;
- (void)player:(GKPlayer * _Nonnull)player receivedExchangeCancellation:(GKTurnBasedExchange * _Nonnull)exchange forMatch:(GKTurnBasedMatch * _Nonnull)match;
- (void)player:(GKPlayer * _Nonnull)player receivedExchangeReplies:(NSArray<GKTurnBasedExchangeReply *> * _Nonnull)replies forCompletedExchange:(GKTurnBasedExchange * _Nonnull)exchange forMatch:(GKTurnBasedMatch * _Nonnull)match;
- (void)player:(GKPlayer * _Nonnull)player didRequestMatchWithRecipients:(NSArray<GKPlayer *> * _Nonnull)recipientPlayers;
- (void)player:(GKPlayer * _Nonnull)player matchEnded:(GKTurnBasedMatch * _Nonnull)match;
- (void)player:(GKPlayer * _Nonnull)player receivedTurnEventForMatch:(GKTurnBasedMatch * _Nonnull)match didBecomeActive:(BOOL)didBecomeActive;
- (void)player:(GKPlayer * _Nonnull)player wantsToQuitMatch:(GKTurnBasedMatch * _Nonnull)match;
@end

@interface GameKitUIDelegateHandler (SWIFT_EXTENSION(GameKitWrapper)) <GKGameCenterControllerDelegate>
- (void)gameCenterViewControllerDidFinish:(GKGameCenterViewController * _Nonnull)gameCenterViewController;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
